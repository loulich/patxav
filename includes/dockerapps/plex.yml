---
- hosts: localhost
  gather_facts: true
  vars_files:
    - "{{ lookup('env','BASEDIR') }}/includes/dockerapps/templates/plex/tasks/settings.yml"
    - "{{ lookup('env','BASEDIR') }}/includes/dockerapps/templates/plex/defaults/main.yml"
    - "{{ lookup('env','CONFDIR') }}/variables/account.yml"

  tasks:

    - name: 'Set Known Facts'
      set_fact:
        pgrole: 'plex'

    - name: "Variables | Set 'cloudflare_enabled' variable"
      set_fact:
        cloudflare_enabled: "{{ true if not(
            (cloudflare.login is undefined)
            or
            (cloudflare.login is none)
            or
            (cloudflare.login | trim | length == 0)
            or
            (cloudflare.api is undefined)
            or
            (cloudflare.api is none)
            or
            (cloudflare.api | trim | length == 0)
          )
            else false }}"

    - name: "Variables | Set 'plex_account_enabled' variable"
      set_fact:
        plex_account_enabled: "{{ true if not(
            (plex.token is undefined)
            or
            (plex.token is none)
            or
            (plex.token | trim | length == 0)
          )
          else false }}"

    - name: "Variables | Set 'sub' variable"
      set_fact:
        sub_enabled: "{{ true if not(
            (sub[pgrole][pgrole] is undefined)
            or
            (sub[pgrole][pgrole] is none)
            or
            (sub[pgrole][pgrole] | trim | length == 0)
          )
            else false }}"

    - name: "create {{ pgrole}} state"
      shell: |
        echo "1" > {{ lookup('env','CONFDIR') }}/status/{{ pgrole }}

    - name: "Set DNS Record on CloudFlare"
      include_tasks: "{{ lookup('env','BASEDIR') }}/includes/config/roles/cloudflare/tasks/main.yml"
      vars:
        subdomain: "{{sub[pgrole][pgrole] if sub_enabled else pgrole}}"
      when: cloudflare_enabled

    - name: "Create Plex directories"
      become: yes
      file: "path={{ item }} state=directory mode=0775 owner={{ lookup('env','MYUID') }} group={{ lookup('env','MYGID')}}"
      with_items: "{{ plex_folders }}"

    - name: "Stop and remove any existing container"
      docker_container:
        name: plex
        state: absent

    - name: "Pull Plex Docker image"
      docker_image:
        name: "{{ plex_docker_image }}"
        source: pull

    - name: "Check if '/dev/dri' exists"
      stat:
        path: "/dev/dri"
      register: dev_dri

    - name: "Check if 'Preferences.xml' exists"
      stat:
        path: "{{ lookup('env','CONFDIR') }}/docker/{{ lookup('env','USER') }}/plex/config/Library/Application Support/Plex Media Server/Preferences.xml"
      register: preferences_xml

    - name: "'Preferences.xml' Tasks"
      block:

      - name: Get 'Preferences.xml' XML data
        xml:
          path: "{{ lookup('env','CONFDIR') }}/docker/{{ lookup('env','USER') }}/plex/config/Library/Application Support/Plex Media Server/Preferences.xml"
          xpath: /Preferences
          content: attribute
        register: preferences_xml_resp
        ignore_errors: yes

      - name: "Remove 'Preferences.xml' if malformed"
        file:
          path: "{{ lookup('env','CONFDIR') }}/docker/{{ lookup('env','USER') }}/plex/config/Library/Application Support/Plex Media Server/Preferences.xml"
          state: absent
        when: (preferences_xml_resp is failed)

      - name: Set 'transcoder_path_fix' variable
        set_fact:
          transcoder_path_fix: "{{ (preferences_xml_resp is succeeded) and
            (preferences_xml_resp.matches[0].Preferences.TranscoderTempDirectory is defined) and
            (preferences_xml_resp.matches[0].Preferences.TranscoderTempDirectory | trim == '/transcodes') }}"

      - name: "Fix 'TranscoderTempDirectory'"
        xml:
          path: "{{ lookup('env','CONFDIR') }}/docker/{{ lookup('env','USER') }}/plex/config/Library/Application Support/Plex Media Server/Preferences.xml"
          xpath: /Preferences
          attribute: TranscoderTempDirectory
          value: "/transcode"
          state: present
        ignore_errors: yes
        when: (transcoder_path_fix)

      - name: Set 'plex_server_claimed' variable
        set_fact:
          plex_server_claimed: "{{ (preferences_xml_resp is succeeded) and
            (preferences_xml_resp.matches[0].Preferences.PlexOnlineToken is defined) and
            (preferences_xml_resp.matches[0].Preferences.PlexOnlineToken | trim | length > 0) }}"

      when:
        - (preferences_xml.stat.exists)

    - name: Claim Plex Server
      import_tasks: "{{ lookup('env','BASEDIR') }}/includes/dockerapps/templates/plex/tasks/subtasks/claim_server.yml"
      when:
        - (not preferences_xml.stat.exists) or (preferences_xml.stat.exists and not plex_server_claimed)

    - name: 'Set Default Labels'
      set_fact:
        default_labels:
          traefik.enable: 'true'
          ## HTTP Routers
          traefik.http.routers.plex-rtr.entrypoints: 'https'
          traefik.http.routers.plex-rtr.rule: 'Host(`{{sub[pgrole][pgrole] if sub_enabled else pgrole}}.{{user.domain}}`)'
          traefik.http.routers.plex-rtr.tls: 'true'
          ## HTTP Services
          traefik.http.routers.plex-rtr.service: 'plex-svc'
          traefik.http.services.plex-svc.loadbalancer.server.port: '32400'

    - name: "Create and start container"
      docker_container:
        name: plex
        image: "{{ plex_docker_image }}"
        pull: yes
        published_ports: "{{ plex_main_ports }}"
        env:
          PLEX_UID: "{{ lookup('env','MYUID')}}"
          PLEX_GID: "{{ lookup('env','MYGID')}}"
          PLEX_CLAIM: "{{ (plex_claim_code) | default(omit) }}"
          TZ: "Europe/Paris"
        volumes: "{{ plex_docker_volumes }}"
        devices: "{{ '/dev/dri:/dev/dri' if (gpu.intel and dev_dri.stat.exists) | default(false) else omit }}"
        etc_hosts: "{{ plex_docker_hosts }}"
        networks:
          - name: traefik_proxy
        restart_policy: unless-stopped
        state: started
        labels: "{{ default_labels }}"

    # Sometimes docker will set transcodes folder to root after a restore.
    - name: "Ensure transcodes folder has the correct permissions"
      become: yes
      file:
        path: "{{ plex.transcodes }}"
        owner: "{{ lookup('env','MYUID') }}"
        group: "{{ lookup('env','MYGID') }}"
        mode: 0775
        recurse: yes

    - name: Extra Tasks
      import_tasks: "{{ lookup('env','BASEDIR') }}/includes/dockerapps/templates/plex/tasks/subtasks/extra.yml"
      ignore_errors: yes

    - name: add resume file
      become: yes
      shell: |
        echo "{{pgrole}}-{{sub[pgrole][pgrole] if sub_enabled else pgrole}}.{{user.domain}}" >> {{ lookup('env','CONFDIR') }}/temp.txt

    - name: create traefik state
      shell: |
        echo "2" > {{ lookup('env','CONFDIR') }}/status/plex


