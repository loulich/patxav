#!/bin/bash

---
- hosts: localhost
  gather_facts: false
  vars_files:
    - "{{ lookup('env','CONFDIR') }}/variables/account.yml"
    - "{{ lookup('env','BASEDIR') }}/includes/dockerapps/templates/generique/generique.yml"

  tasks:
        
    # FACTS #######################################################################

    - name: create ubooquity state
      shell: |
        echo "1" > {{ lookup('env','CONFDIR') }}/status/ubooquity

    - name: Checking for existing app data
      stat:
        path: "{{ lookup('env','CONFDIR') }}/docker/{{lookup('env','USER')}}/authelia/configuration.yml"
      register: check

    - name: 'Set Known Facts'
      set_fact:
        pgrole: 'ubooquity'
        image: 'ghcr.io/linuxserver/ubooquity'

    - name: "Set DNS Record on CloudFlare"
      include_tasks: "{{ lookup('env','BASEDIR') }}/includes/config/roles/cloudflare/tasks/main.yml"
      vars:
        subdomain: "{{sub[pgrole][pgrole] if sub_enabled else pgrole}}"
      when: cloudflare_enabled

    # FACTS #######################################################################

    - name: Creating paths
      file: "path={{item}} state=directory mode=0775 owner={{ lookup('env','MYUID') }} group={{ lookup('env','MYGID') }}"
      with_items:
        - "{{ lookup('env','CONFDIR') }}/docker/{{ lookup('env','USER') }}/{{pgrole}}"

    # LABELS ######################################################################
    - name: 'Adding Traefik'
      set_fact:
        pg_labels:
          traefik.enable: 'true'
          traefik.http.routers.ubooquity-rtr.entrypoints: 'https'
          traefik.http.routers.ubooquity-rtr.rule: 'Host(`{{sub[pgrole][pgrole] if sub_enabled else pgrole}}.{{user.domain}}`)'
          traefik.http.routers.ubooquity-rtr.service: 'ubooquity'
          traefik.http.services.ubooquity.loadbalancer.server.port: '2202'
          traefik.http.routers.ubooquity-admin-rtr.entrypoints: 'https'
          traefik.http.routers.ubooquity-admin-rtr.rule: 'Host(`{{sub[pgrole][pgrole] if sub_enabled else pgrole}}.{{user.domain}}`) && PathPrefix(`/ubooquity/admin`)'
          traefik.http.routers.ubooquity-admin-rtr.service: 'ubooquity-admin'
          traefik.http.services.ubooquity-admin.loadbalancer.server.port: '2203'

    - name: 'Setting Volumes'
      set_fact:
        pg_volumes:
          - "{{ lookup('env','CONFDIR') }}/docker/{{lookup('env','USER')}}/{{pgrole}}:/config"
          - "/home/{{lookup('env','USER')}}:/home/{{lookup('env','USER')}}"
          - "/home/{{lookup('env','USER')}}:/media"
          - '/etc/localtime:/etc/localtime:ro'

    - name: 'Setting ENV'
      set_fact:
        pg_env:
          PUID: "{{ lookup('env','MYUID') }}"
          PGID: "{{ lookup('env','MYGID') }}"
          TZ: 'Europe/Paris'

    # MAIN DEPLOYMENT #############################################################
    - name: 'Deploying {{pgrole}}'
      docker_container:
        name: '{{pgrole}}'
        hostname: 'library'
        image: '{{image}}'
        pull: yes
        volumes: '{{pg_volumes}}'
        env: '{{pg_env}}'
        restart_policy: unless-stopped
        networks:
          - name: traefik_proxy
        state: started
        labels: '{{pg_labels}}'

    - name: add resume file
      become: true
      shell: |
        echo "{{pgrole}}-{{sub[pgrole][pgrole] if sub_enabled else pgrole}}.{{user.domain}}" >> "{{ lookup('env','CONFDIR') }}/temp.txt"

    - name: create ubooquity state
      shell: |
        echo "2" > {{ lookup('env','CONFDIR') }}/status/ubooquity


