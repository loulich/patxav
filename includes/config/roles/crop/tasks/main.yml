---
- hosts: localhost
  gather_facts: false
  vars_files:
    - "{{ lookup('env','CONFDIR') }}/variables/account.yml"

  tasks:

    - name: Check if cloudplow.service exists
      stat:
        path: "/etc/systemd/system/cloudplow.service"
      register: cloudplow_service

    - name: Service Tasks
      block:

      - name: Populate Service Facts
        service_facts:

      - name: Get cloudplow service state
        set_fact:
          cloudplow_service_running: "{{ (services['cloudplow.service'] is defined) and (services['cloudplow.service']['state'] == 'running') }}"

      - name: Stop cloudplow service
        become: yes
        systemd:
          name: cloudplow
          state: stopped
          enabled: no
        when: cloudplow_service_running

      - name: delete cloudplow.service
        become: yes
        file:
          path: /etc/systemd/system/cloudplow.service
          state: absent

      - name: delete cloudplow folder
        become: yes
        file:
          path: "/home/{{ lookup('env','USER') }}/scripts/cloudplow"
          state: absent

      - name: "create plex_autoscan state"
        shell: |
          echo "0" > {{ lookup('env','CONFDIR') }}/status/cloudplow

      when: cloudplow_service.stat.exists

    - name: Check if crop.service exists
      stat:
        path: "/etc/systemd/system/crop_upload.service"
      register: crop_upload_service

    - name: Service Tasks
      block:

      - name: Populate Service Facts
        service_facts:

      - name: stopped Systemd Unit
        become: yes
        systemd:
          name: '{{ item }}.service'
          state: stopped
          enabled: no
        with_items:
          - crop_upload
          - crop_sync

      - name: delete crop folder
        become: yes
        file:
          path: "{{ item }}"
          state: absent
        with_items:
          - /etc/systemd/system/crop_upload.service
          - /etc/systemd/system/crop_sync.service
          - /etc/systemd/system/crop_upload.timer
          - /etc/systemd/system/crop_sync.timer

      - name: delete crop script
        become: yes
        file:
          path: "/home/{{ lookup('env','USER') }}/scripts/crop"
          state: absent

      when: crop_upload_service.stat.exists

    - name: Create Basic Directories
      file: "path={{item}} state=directory mode=0775 owner={{ lookup('env','MYUID') }} group={{ lookup('env','MYGID') }} recurse=yes"
      with_items:
        - "/home/{{ lookup('env','USER') }}/scripts/crop"

    - name: install crop latest
      shell: |
        wget -P "/home/{{ lookup('env','USER') }}/scripts/" https://github.com/$(wget https://github.com/l3uddz/crop/releases/latest -O - | egrep '/.*/.*/.*linux_amd64.tar.gz' -o)
        archive=$(ls *linux_amd64.tar.gz)
        tar -xvf $archive -C "/home/{{ lookup('env','USER') }}/scripts/crop"     
        chmod +x crop
        rm $archive
      become: yes
      become_user: "{{ lookup('env','USER') }}"
      args:
        chdir: "/home/{{ lookup('env','USER') }}/scripts/"

    - name: Import default config
      template:
        src: "{{ lookup('env','BASEDIR') }}/includes/config/roles/crop/templates/config.yaml.j2"
        dest: "/home/{{ lookup('env','USER') }}/scripts/crop/config.yaml"
        mode: 0600
        force: yes
      become: yes
      become_user: "{{ lookup('env','USER') }}"

    - name: Import default crop_sync.service
      become: yes
      template:
        src: "{{ lookup('env','BASEDIR') }}/includes/config/roles/crop/templates/systemd/crop_sync.service.j2"
        dest: /etc/systemd/system/crop_sync.service

    - name: Import default crop_upload.service
      become: yes
      template:
        src: "{{ lookup('env','BASEDIR') }}/includes/config/roles/crop/templates/systemd/crop_upload.service.j2"
        dest: /etc/systemd/system/crop_upload.service

    - name: Import default crop_upload.timer
      become: yes
      template:
        src: "{{ lookup('env','BASEDIR') }}/includes/config/roles/crop/templates/systemd/crop_upload.timer.j2"
        dest: /etc/systemd/system/crop_upload.timer

    - name: Import default crop_sync.timer
      become: yes
      template:
        src: "{{ lookup('env','BASEDIR') }}/includes/config/roles/crop/templates/systemd/crop_sync.timer.j2"
        dest: /etc/systemd/system/crop_sync.timer

    - name: Wait for 5 seconds before continuing
      wait_for:
        timeout: 5

    - name: started Systemd crop_upload.service
      become: yes
      systemd:
        state: started
        daemon_reload: yes
        enabled: yes      
        name: crop_upload.service

    - name: started Systemd crop_sync.service
      become: yes
      systemd:
        state: started
        daemon_reload: yes
        enabled: yes      
        name: crop_sync.service

    - name: Import crapper
      template:
        src: "{{ lookup('env','BASEDIR') }}/includes/config/roles/crop/templates/crapper.j2"
        dest: "/home/{{ lookup('env','USER') }}/scripts/crop/crapper"
        mode: 0755
        force: yes
      become: yes
      become_user: "{{ lookup('env','USER') }}"

    - name: Import crapper.env
      template:
        src: "{{ lookup('env','BASEDIR') }}/includes/config/roles/crop/templates/crapper.env.j2"
        dest: "/home/{{ lookup('env','USER') }}/scripts/crop/crapper.env"
        mode: 0755
        force: yes
      become: yes
      become_user: "{{ lookup('env','USER') }}"

    - name: "create plex_autoscan state"
      shell: |
        echo "2" > {{ lookup('env','CONFDIR') }}/status/crop



